# coding: utf-8

"""
    ThingsBoard REST API

    For instructions how to authorize requests please visit <a href='http://thingsboard.io/docs/reference/rest-api/'>REST API documentation page</a>.  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: info@thingsboard.io
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from tb_rest_client.models.models_ce import ComponentDescriptor

class ComponentDescriptor(ComponentDescriptor):
    def __init__(self, actions=None, clazz=None, configuration_descriptor=None, created_time=None, id=None, name=None, scope=None, type=None):  # noqa: E501
        super().__init(actions, clazz, configuration_descriptor, created_time, id, name, scope, type)
        self._type = None
        if type is not None:
            self.type = type

    @property
    def type(self):
        """Gets the type of this ComponentDescriptor.  # noqa: E501


        :return: The type of this ComponentDescriptor.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ComponentDescriptor.


        :param type: The type of this ComponentDescriptor.  # noqa: E501
        :type: str
        """
        allowed_values = ["ENRICHMENT", "FILTER", "TRANSFORMATION", "ACTION", "ANALYTICS", "EXTERNAL"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"  # noqa: E501
                .format(type, allowed_values)
            )

        self._type = type
